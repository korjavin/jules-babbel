name: Build and Push Docker Image

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.sha }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Generate deployment summary
      run: |
        echo "## Docker Image Built Successfully! üê≥" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Image Tags:**" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Run the image:**" >> $GITHUB_STEP_SUMMARY
        echo '```bash' >> $GITHUB_STEP_SUMMARY
        echo "docker run -p 8080:8080 \\" >> $GITHUB_STEP_SUMMARY
        echo "  -e OPENAI_API_KEY=your_key_here \\" >> $GITHUB_STEP_SUMMARY
        echo "  -e OPENAI_URL=https://api.openai.com/v1 \\" >> $GITHUB_STEP_SUMMARY
        echo "  -e MODEL_NAME=gpt-3.5-turbo-1106 \\" >> $GITHUB_STEP_SUMMARY
        echo "  ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY

    - name: üìù Update and commit docker-compose.yml
      # This step checks out the repo, updates the image tag, and pushes the change to deploy branch.
      run: |
          # Configure Git with a user name and email.
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          
          # Create and switch to deploy branch (or switch if it exists)
          git checkout -B deploy
          
          sed -i "s|image: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:.*|image: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.sha }}|g" docker-compose.yml
          
          # Add the changed file, commit it, and push it to the 'deploy' branch.
          git add docker-compose.yml
          git commit -m "ci: Update image tag to ${{ github.sha }}"
          git push origin deploy --force

    - name: üöÄ Trigger Portainer Redeploy Webhook
      # This step runs AFTER the image is pushed and the git commit is done.
      # It guarantees the image exists before Portainer tries to pull.
      uses: distributhor/workflow-webhook@v3
      with:
        webhook_url: ${{ secrets.PORTAINER_REDEPLOY_HOOK }}
        webhook_secret: "trigger"